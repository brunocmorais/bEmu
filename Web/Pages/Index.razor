@page "/"

@using Blazor.Extensions;
@using Blazor.Extensions.Canvas.Canvas2D;
@using bEmu.Web.Classes;
@using bEmu.Core.Video;

<div tabindex="0" id="canvas" @onkeydown="OnKeyPress" @onkeyup="OnKeyPress">
    <BECanvas Width="640" Height="480" @ref="canvas"></BECanvas>
</div>

@inject IJSRuntime js;

@code {

    private BECanvasComponent canvas;
    private Main main;
    private FrameBuffer frameBuffer;
    private byte color = 0;

    private async Task Test()
    {
        uint rgba = (uint)(color << 24 | color << 16 | color << 8 | 0xFF);
        var pixel = (Pixel) rgba;

        for (int i = 0; i < frameBuffer.Width; i++)
            for (int j = 0; j < frameBuffer.Height; j++)
                frameBuffer[i, j] = pixel;

        color += 4;

        await js.InvokeVoidAsync("writeFramebuffer", frameBuffer.Data, frameBuffer.Width, frameBuffer.Height); 
    }

    [JSInvokable]
    public async Task GameLoop()
    {
        main.Update();
        await main.Draw();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        var context = await canvas.CreateCanvas2DAsync();
        main = new Main(context, js);
        frameBuffer = new FrameBuffer(10, 10);
        
        main.Initialize();

        await js.InvokeAsync<object>("initGame", DotNetObjectReference.Create(this));
    }


    protected void OnKeyPress(KeyboardEventArgs e)
    {
        switch (e.Type)
        {
            case "keydown":
                if (!main.PressedKeys.Contains(e.Key))
                    main.PressedKeys.Add(e.Key);
                break;
            case "keyup":
                main.PressedKeys.Remove(e.Key);
                break;
        }
    }
}